#!/usr/bin/python
# -*- coding: UTF-8 -*-


print("--- Python学習講座 ---")
print("--- Python入門 ---")
print("--- シーケンス ---")


print("--- シーケンス ---")


"""
これまで学習した数値や真理値などは変数にただ1つの値を格納していましたが、
変数の基本で解説したとおり、
Pythonには複数の値を格納する型がいくつか用意されています。
これから学習するシーケンスも複数の値を格納することが可能です。

シーケンスとは複数の値を順番に並べたものをひとかたまりとして格納するための型です。
例えば、第1回から第10回までのテストの点数データがあり、
順番に出力する場合を考えてみましょう。
以下のように10個の配列を用意することは少々面倒臭そうですね。
また、数を追加するとさらに大変です。

# テストの点数
num1 = 97
num2 = 78
num3 = 88
# :
# :
num9 = 92
num10 = 75

# 出力
print(num1)
print(num2)
# :
# :
print(num9)
print(num10)

そこでシーケンスの一種であるリストを使用すると、以下のように記述することができます。
"""

# テストの点数
num_list = [97, 78, 88, 76, 100, 85, 72, 85, 92, 75]

# 出力する
for num in num_list:
	print(num)    
# 97
# 78
# 88
# 76
# 100
# 85
# 72
# 85
# 92
# 75

"""
後ほど説明しますが、for文と呼ばれるループを活用し、
順番に処理を行うことが可能となります。

シーケンス型には様々な種類がありますが、基本的なシーケンス型として、

    リスト
    タプル
    range
    文字列

が挙げられます。それぞれに学習する前に、簡単に概要を説明しましょう。


用語の補足

概要の説明の前に用語の補足です。
先程、シーケンスは「複数の値を順番に並べたものをひとかたまりとして」と書きました。
複数の値のなかで、それぞれの値を要素と呼びます。
また、要素には何番目、という番号がつけられており、
その番号のことをインデックス、若しくは添字と呼びます。

リスト

リストはシーケンスでもっとも基本的かつ重要といえます。
上のサンプルのようにデータをまとめて取り扱うことができ、
またデータの要素を書き換えたり順序を変更したりすることができます。

タプル

タプルはリストとは異なり、後から値や順序を変更することができないシーケンスです。
最初に定めた値が保証されるため、安全にプログラミングを行う際に活躍します。
（タプルのような後から値を変更できない性質のことイミュータブルといいます。）

range

range関数を使用すると引数で指定した整数の数の要素をもった
rangeと呼ばれるシーケンスを得ることができます。
所定の回数分ループする際に使用できます。
また、リストと比較してメモリの使用量が少ないのも特徴の1つです。

文字列

ダブルクォート、もしくはシングルクォートでくくった文字列を変数に格納することができます。

text = 'abce'

この変数の型を文字列型(str)と呼びます。
いずれも重要ですのでこれから順番に学習していきましょう。
"""
