#!/usr/bin/python
# -*- coding: UTF-8 -*-


print("--- Python学習講座 ---")
print("--- Python応用編 ---")
print("--- 仮説検定とは ---")


"""
統計分析において推定と並んで重要なのが仮説検定です。
このページでは統計の仮説検定について解説します。
"""


print("--- 仮説検定とは ---")


"""
前回まで標本から母集団の特徴を分析する手法として推定について学習しました。
母平均のような母集団の統計量がどんな値を取りうるのか？
というのを確率的に推測したのですが、
推測統計で推定と並んで重要なのが仮説検定です。
仮説検定とは「母集団に関する統計量がある値となるかどうか」
という仮説を立て、その仮説の成否を分布と標本を用いて検証する分析手法です。
仮説検定で使用する仮説には以下の2種類があり、
それぞれH0、H1と略されます（Hypothesis Testingの頭文字）。

    H0 帰無仮説：成立しないと思われる仮説
    H1 対立仮説：成立すると思われる仮説

仮説検定では、「成立すると思われる仮説」が正しいことを示すために、
まず一旦帰無仮説が成り立つものとして分布を調べます。
分布を調べた結果、帰無仮説が不成立であることを示すことにより
対立仮説が採用できる、というように議論を進めます。
"""


print("--- 具体的な計算例 ---")


"""
次に具体的な使われ方の例を基に仮説検定の流れについて説明します。
仮説検定では推定と同様様々な手法があるのですが、
今回は母平均を検定してみます。
ある食品工場で製品を製造している場面を想定します。
この製品は天然素材を使用しているため個体ごとに多少のばらつきがありますが、
カタログ上は平均重量が200gとなっています。
またこの製品の重量の分布は正規分布であるとします。
ある日、納品先から「最近製品の重量がカタログと異なるのではないか？」
というクレームが来ました。
実際に工場でサンプルを20個抽出して重量を計測してみると、
標本重量が190gで標本分散が400でした。
標本平均だけ見るとたしかに少し軽そうですが、
製品のばらつきに由来する誤差の範囲かもしれません。
仮説検定を用いて検証してみましょう。

まず、このクレームの妥当性を検証するために以下2つの仮説を設定します。

    H0:この製品の平均重量は200gである
    H1:この製品の平均重量が200gでない

もし仮に製品の平均重量が200gであれば、
前回学習したt分布の公式より、
母平均\(\mu\)が\(\alpha\times 100\)％の確率で
以下の不等式の範囲に収まるということになります。
\[
\overline{X} - t_{N-1}(\alpha/2) \sqrt{S^2/N} < \mu < \overline{X} + t_{N-1}(\alpha/2)\sqrt{S^2/N}
\] 式変形により以下の不等式が導出でき、\( \overline{X} \)は190.6〜209.3の間に95%の確率で収まるはずです(Pythonでの計算方法は後述します。)。
\[
\mu - t_{N-1}(\alpha/2) \sqrt{S^2/N} < \overline{X} < \mu + t_{N-1}(\alpha/2)\sqrt{S^2/N}
\] ところが実際に測った標本平均は180gで想定より十分軽いため、
この食品の平均重量は200gであるという仮説は棄却できます。
このためクレームの内容は妥当であると判断できるわけです。
ここで使用した190.6未満もしくは209.3gより大きい範囲を棄却域、
97.5%を有意水準と呼びます。
また、棄却域に入らない場合は結論づけはできず
「なんとも言えない」ということになります。
なお、t分布を用いた先ほどの母平均の棄却域の計算を
Pythonで行うコードサンプルは以下の通りとなります。
"""

import numpy as np
from scipy import stats


# 母平均？
mu = 200

# 標本サイズ
N = 20

# 標本分散
S2 = 400

# 自由度N-1のt分布の上側2.5%点
t_a = stats.t.ppf(0.975, N - 1)

# 標本平均が95%で収まる区間
x_0 = mu - (t_a * (np.sqrt(S2 / N)))
x_1 = mu + (t_a * (np.sqrt(S2 / N)))

print(x_0, x_1)    # 190.6397118716018 209.3602881283982

"""
土台となる考え方は区間推定の信頼区間と同じです。
t分布の棄却域を算出する場合は区間推定のときと同様に
scipyのstats.tを使用します。
"""


print("--- 両側検定と片側検定 ---")


"""
先程の例では以下のように仮説を設定することも可能です。

    H0:この製品の平均重量は200g以上である
    H1:この製品の平均重量が200g未満である

先程は「製品の平均重量が200gではない」という主張の妥当性を検証しましたが、
さらに踏み込んで「製品の平均重量が200gより軽い」
といった主張の妥当性を検証する場合はこのように仮説を立てます。
この場合、\( \overline{X} \)が190.6以上に97.5%の確率で収まるはずです。
棄却域は下側の190.6未満となります。
このような検定を片側検定、
さきほどのように棄却域が両側にある場合を両側検定と呼びます。
こちらの仮説検定も先程の計算結果より
標本平均が190.6未満なので棄却域に入るため、
「製品の平均重量が200gより軽い」
という主張は正しいであろうと判断することができます。
"""
