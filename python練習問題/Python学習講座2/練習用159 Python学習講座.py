#!/usr/bin/python
# -*- coding: UTF-8 -*-


print("--- Python学習講座 ---")
print("--- Python入門 ---")
print("--- リスト内包表記 ---")


print("--- リスト内包表記 ---")


"""
リスト内包表記とはリストコンプリヘンションとも呼ばれ、
イテラブルな変数とループを利用して新たなリストを生成する構文のことです。
他の言語ではあまり見慣れない構文のためはじめは戸惑うかもしれませんが、
慣れると便利な上、使わない場合と比較して処理が速いというメリットがあります。

単純なリスト内包表記
[処理 for 変数 in リスト ]

if文と組み合わせたリスト内包表記
[処理 for 変数 in リスト if リスト要素に対する条件]

構文としては上記の通りなのですが、これだけだと何のことかわかりません。
具体例で動作を確認してみましょう。


リスト内包表記の基本例
まずは単純な例からです。ある数値のリストが与えられていたとします。
そのリストの各要素を倍にしたリストを生成する場合について考えてみましょう。
リスト内包表記を使用しない場合、以下のようになります。
"""

data_list = [5, 3, 7, 4, 10, 9, 6]
new_list = []
for num in data_list:
	new_num = num * 2
	new_list.append(new_num)

print(new_list)    # [10, 6, 14, 8, 20, 18, 12]

"""

"""



































































