#!/usr/bin/python
# -*- coding: UTF-8 -*-


print("--- みゃふのPythonプログラミング解説---")
print("--- ライブラリ、モジュールとは？ ---")


"""
ここではモジュール・ライブラリについて解説します。
Pythonにはあらかじめ用意されている組み込み関数がありますが、
それ以外にも便利な関数が無数にあります。それらの関数を使うために必要なのがimport文です。
ここでは「モジュールって何？」「importしたライブラリの関数はどう使うの？」「pipって何？」といった方へ、
モジュールやpipの解説をします。
"""


print("--- モジュールとは ---")


"""
まずモジュールとは何か、という点からお話しします。
モジュールとは、プログラムを作るために使用できる「部品」をまとめたものです。
Pythonでは主に関数などをまとめた一つのファイルを指してモジュールと言います。
Pythonでは組み込み関数と呼ばれる、元から使える関数があります（例えばmax()やround()など）。
それらの関数だけではシステムを作るのが困難な場合に、別個で用意されているモジュールを使います。
辞書やwhileのところで使ったrandomはモジュールです。
モジュールはimport文で読み込むことで、モジュール内の関数を使うことができるようになります。
"""


print("--- Importの基本 ---")


"""
ではmathモジュールをimportしてみましょう。
すでに他のステップで登場しているので、ここではモジュール名に別名を付けて呼び出してみましょう。
"""

import math as m

v_ceil = m.ceil(32.232)
print(v_ceil)    # 33

"""
1行目でmathモジュールをimportし、mという別名を付けています。
2行目ではceil関数を呼び出しています。ceilは与えられた数値を切り上げる関数です。
今回はimportしたモジュールに別名を付けたので、m.ceil()で関数を使っています。

[構文]

import モジュール名 as 別名
"""


print("--- ライブラリとは ---")


"""
ライブラリとは、「何らかの問題を解決するため、一まとまりにしたパッケージ群」のことです。
パッケージとは「モジュールを一まとまりにしたもの」です。
大きさでは「ライブラリ > パッケージ > モジュール」です。
ライブラリは例えるなら自動車のエンジンのようなものです。モジュールはエンジンを作るための部品で、
ライブラリも自動車を作るための部品の一つですが、それ自体が部品を組み立ててできているものです。
モジュール、パッケージ、ライブラリは概念が近く、しばしば混同されがちなので注意が必要です。

ライブラリの例をいくつかご紹介します。
ライブラリ名	                      説明
python-dateutil	             日付計算を簡単にできるようにするライブラリ
simplejson	                 Python標準のjsonライブラリよりもシンプルで高速なライブラリ
numpy	                     ベクトルや行列計算をするためのライブラリ
pandas	                     データ解析を楽にしてくれるライブラリ
"""


print("--- pipとは ---")


"""
pipとは「Python向けのパッケージ管理システム」です。
Pythonのライブラリは「標準ライブラリ」と「サードパーティライブラリ」の２種類があります。
サードパーティとは第三者という意味です。
Python開発者以外の人が作ったライブラリだと考えておけば良いでしょう。
pipはサードパーティライブラリのインストール・更新・削除といった操作を簡単にできるようにしたライブラリです。


pipの基本的な使い方

では実際にpipを使ってパッケージをインストールしてみましょう。
なお、pipはこの先のステップでも活用するので、ここで使い方を覚えておきましょう。
まずは今インストールされているパッケージを一覧で表示してみましょう。
ターミナルを開いて次のコマンドを実行してください。

$ pip freeze

上記のコマンドを実行すると、既にインストールされているパッケージが表示されます。
表示されたパッケージ名の隣りの数字はバージョンです。
さて、次に、パッケージをインストールしてみましょう。

ここではnumpyをインストールしてみます。

$ pip install numpy

これでインストール完了です。
なお、既にnumpyがインストールされている場合は、
--upgradeオプションをつけることでパッケージをアップグレードできます。

$ pip install --upgrade numpy

最後にパッケージのアンインストール方法もご紹介します。
アンインストールする場合は慎重に行ってください。

$ pip uninstall numpy
"""
