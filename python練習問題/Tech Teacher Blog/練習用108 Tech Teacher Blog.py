#!/usr/bin/python
# -*- coding: UTF-8 -*-


print("--- Tech Teacher Blog ---")
print("--- パッケージの管理ができるようになろう！Pythonのpipの使い方を解説！ ---")


"""
本記事はこのような悩みにお応えします。
pipを使えるようになると、Pythonのパッケージを簡単に管理できるようになります。
しかし、pipの使い方は入門書や入門サイトには書かれていないこともあります。
「どういうふうにすればよいのだろう」と困っている人も多いのではないでしょうか？
本記事ではpipを使ったパッケージのインストール方法から、初心者に分かりやすく解説していきます。
本記事を読むことでpipの基本的なことはわかるようになりますよ。
Python初心者の方はぜひこの機会にpipの基礎をマスターしてしまいましょう！
"""


print("--- Pythonにおけるpipとは ---")


"""
ここまでみなさんはPythonの文法を学習してきたことと思います。
しかし、Pythonの入門書や学習サイトでは、pipコマンドの使い方は説明されていないことも多いです。
中には「そもそもpipって何？」と思っている方もいることでしょう。
ぜひこの機会にpipとは何かを理解しておきましょう！


pipとは何か

pipとは一言で言うと「Pythonのパッケージを管理するためのツール」です。
パッケージとは関連しているプログラムなどが1つにまとめられたもののことを指します。

パッケージには大きく分けて2種類あります。

    公式が配布しているもの
    サードパーティが配布しているもの

①の公式が配布しているものに関しては、Pythonをインストールしたときに自動でインストールされています。
つまり、Pythonの開発環境が整っているなら、1はもう使えるということですね。
②のサードパーティが配布しているものに関しては、Pythonをインストールしただけでは使うことができません。
サードパーティが配布するパッケージを利用するには、自分でパッケージをインストールする必要があります。
このようにパッケージをインストールする場合に使うものが「pip」なのです。
pipを使うことでサードパーティが配布するパッケージを一括管理することができます。
ちなみに、Pythonのパッケージを管理するためのツールには、他にも次のようなものがあります。

    easy_install
    conda

easy_installとは、setuptoolsで提供されているパッケージを管理するためのツールです。
2008年にpipが誕生する以前は、こちらがよく使われていたようです。
condaとは、Anacondaに標準で付属しているパッケージを管理するためのツールです。
主にPythonで人工知能や科学技術計算をするために使われるもので、
今後お世話になるかもしれません。
この2つも覚えておくと良いでしょう。
"""


print("--- pipの実践方法・具体例 ---")


"""
それでは実際にpipを使ってみましょう。
ここではpipのインストール方法から順に解説していきます。

本記事に書かれたことを実践するために必要なのはコマンドプロンプトのみです。
Macならターミナルを用意してください。
本記事ではpipコマンドを使って次のことを行っていきます。

    パッケージのインストール
    インストール済みのパッケージの確認
    パッケージのアップグレード
    パッケージのアンインストール

慣れない操作が多くて難しく感じるかもしれませんが、
慣れてしまえば容易にパッケージの管理をすることができます。
1つずつやり方を覚えていきましょう！


パッケージをインストールする

これからpipを使ってパッケージをインストールしていきます。
まずはコマンドプロンプトを開いてください。コマンドプロンプトに次のコマンドを入力しましょう。
pip install numpy

以下のようなメッセージが表示されたら、インストール成功です。
Installing collected packages: numpy
Successfully installed numpy-1.18.4
You are using pip version 9.0.3, however version 20.1.1 is available.
You should consider upgrading via the ‘pip install –upgrade pip’ command.

このように「install」を使うとパッケージをインストールすることが可能です。
インストール時に、パッケージ名とバージョンが一覧で表示されます。
それが今インストールしたパッケージの一覧です。無事に表示されれば成功です！
また、バージョンを指定してインストールしたい場合は、次のようにしてください。

pip install ‘numpy==1.14.2’

ここでは1.14.2バージョンを指定してnumpyパッケージをインストールしています。
pipを使ってパッケージをインストールする作業は以上になります。


インストール済みのパッケージの確認

続いて、インストール済みのパッケージの確認を行いましょう。
パッケージが正しくインストールされているか確かめるには、次のコマンドを入力します。

python -m pip list

すると以下のように、パッケージ名とそのバージョンの一覧が表示されます。

beautifulsoup4 (4.9.0)
certifi (2019.3.9)
chardet (3.0.4)
idna (2.8)
numpy (1.18.4)
pip (9.0.3)
requests (2.22.0)
setuptools (39.0.1)
soupsieve (2.0)
urllib3 (1.25.3)
You are using pip version 9.0.3, however version 20.1.1 is available.
You should consider upgrading via the ‘pip install –upgrade pip’ command.

カッコ内に書かれているのがそのパッケージのバージョンとなります。
引数に「list」を指定するのを忘れないでくださいね。
これで、インストールされているパッケージの一覧を表示させることができました。
また、パッケージ名とバージョンの一覧のみを表示させたい場合は、次のコマンドを使います。

python -m pip freeze

この場合、以下のように「パッケージ名=バージョン」の形で表示されます。

beautifulsoup4==4.9.0
certifi==2019.3.9
chardet==3.0.4
idna==2.8
requests==2.22.0
soupsieve==2.0
urllib3==1.25.3

grepコマンドと組み合わせることで、特定のパッケージがあるかを確認することも可能ですよ。

python -m pip freeze | grep requests

こうすれば「requests」パッケージのみが表示されます。
requests==2.22.0

このようにすれば、インストールしたパッケージがわかります。


パッケージをアップデートする

続いてパッケージをアップデートする方法を解説していきます。
アップデートとは、新しいものに更新してバージョンアップさせることを言います。
pipを使ってパッケージをアップデートするには、次のようなコマンドを入力します。

pip install –upgrade pip

以下のようなメッセージが表示されたら、アップデート成功です。
Installing collected packages: pip
Found existing installation: pip 9.0.3
Uninstalling pip-9.0.3:
Successfully uninstalled pip-9.0.3
Successfully installed pip-20.1.1

このように、アップデートする場合は、installコマンドに
「–upgrade」オプションを加える必要があります。
アップデートもpipコマンドで簡単にできるようになりましたね。


パッケージをアンインストールする

「pipでインストールしたパッケージをもう使わなくなった」
「パッケージに不具合が発生したから新しくインストールし直したい」

こうした場合には、パッケージをアンインストールしたいこともあると思います。
この場合はpipコマンドを使って、次のように入力しましょう。

pip uninstall numpy

このコマンドを実行すると「Proceed (y/n)?」と表示され、
「本当にアンインストールしていいの？」と確認が入ります。
ここで「y」を入力して「Enter」を押すと、アンインストールが実行されます。
「n」を入力して「Enter」を押すと、アンインストールはされません。
次のようなメッセージが表示されたら、アンインストール成功です。

Successfully uninstalled numpy-1.18.4

このようにuninstallコマンドを使うことで、パッケージをアンインストールできます。
ただし、一度アンインストールしてしまうと、
もう一度使うためには再インストールしないといけなくなってしまうので注意しましょう。
再インストールする場合は、通常通りにインストールすれば大丈夫です。
なお、uninstallコマンドを使うときに「-y」を付け加えると
確認をスキップしてアンインストールすることができます。

pip uninstall -y numpy

このコマンドを入力すると「Proceed (y/n)?」と表示されることなく、すぐにアンインストールがされます。
このように「uninstall」コマンドを使うことで、パッケージをアンインストールできるので覚えておきましょう。
"""


print("--- まとめ ---")


"""
本記事ではPythonのpipについて解説しました。
Pythonのpipはそれほど使うのが難しいものではありませんし、
基本的なコマンドを覚えてしまえば便利に使うことができます。
ただ、そこまで頻繁に使うものではないので、使い方を忘れてしまうこともあるかもしれません。
そんな場合はぜひこの記事を見直してくださいね。
pipを使えば簡単にパッケージの管理を行うことができます。
本記事がPython初心者の方にとって有意義なものとなれば幸いです。
"""
